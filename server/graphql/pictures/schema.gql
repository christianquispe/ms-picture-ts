type Query {
  getPicture(input: InputGetPicture!): Picture
  allPictures(paginated: Paginated, filter: FilterPicture): PaginatedPicture
}

input Paginated {
  page: Int
  perPage: Int
  sortField: String
  sortOrder: String
}

input FilterPicture {
  q: String
  ids: [ID]
  id: ID
  status: String
}

type Mutation {
  addPicture(input: InputPicture!): Picture
}

input InputGetPicture {
  id: ID!
}

input InputPicture {
  name: String!
  description: String!
}

type PaginatedPicture {
  pageInfo: PageInfo
  pictures: [Picture]
}

type Picture {
  _id: ID
  name: String
  description: String
  status: String
  createdAt: String
  updatedAt: String
}

type PageInfo {
  total: Int
  currentPage: Int
  perPage: Int
  hasPreviousPage: Boolean
  hasNextPage: Boolean
}
